name: "CI"

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    env:
      POETRY_VERSION: 1.3.1
      POETRY_VIRTUALENVS_CREATE: 0
      POETRY_HOME: ~/.local
      POETRY_CACHE_DIR: ~/.cache/pypoetry
      SECRET_KEY: xxx
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/github_actions
      WALLET_NAMES: Binance

    # Majority of the tests require database
    services:
      postgres:
        image: postgres:13.7
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: "Set up Python 3.10"
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: "Load cached dependencies"
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.pythonLocation }}
            ${{ env.POETRY_HOME }}
            ${{ env.POETRY_CACHE_DIR }}
          # Invalidate cache when any of these changes:
          # - python version
          # - poetry version
          # - dependencies
          # - manually changed "cache-v1" prefix
          key: cache-v1-${{ hashFiles('**/poetry.lock') }}-poetry${{ env.POETRY_VERSION }}-python${{ steps.setup-python.outputs.python-version }}

      - name: "Install Poetry"
        if: steps.cache.outputs.cache-hit != 'true'
        run: curl -sSL https://install.python-poetry.org | python -

      - name: "Add poetry install directory to path"
        run: echo "${{ env.POETRY_HOME }}" >> $GITHUB_PATH

      - name: "Install dependencies"
        if: steps.cache.outputs.cache-hit != 'true'
        run: >
          poetry install --no-root

      - name: "Check code style"
        run: >
          black --check --diff .
          && flake8 .
          && isort --check-only --diff .

      - name: "Run tests"
        run: pytest -vvv --cov=. .
